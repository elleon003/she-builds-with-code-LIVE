<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>She Builds With Code - Mindset</title><link href="https://shebuildswithcode.com/" rel="alternate"></link><link href="https://shebuildswithcode.com/feeds/mindset.atom.xml" rel="self"></link><id>https://shebuildswithcode.com/</id><updated>2019-08-08T00:00:00-04:00</updated><entry><title>Where Are You Going?</title><link href="https://shebuildswithcode.com/blog/where-are-you-going.html" rel="alternate"></link><published>2019-08-08T00:00:00-04:00</published><updated>2019-08-08T00:00:00-04:00</updated><author><name>Noelle</name></author><id>tag:shebuildswithcode.com,2019-08-08:/blog/where-are-you-going.html</id><summary type="html">&lt;p&gt;Can't expect to get somewhere when you don't know where you want to end up.&lt;/p&gt;</summary><content type="html">&lt;p&gt;For the past few days, I've been restless in my coding education. Since I got this site up and running in Pelican, I've felt a little lost. I set out to build this site from the ground up, and I did. From complete blank page to site generator, I did this whole thing. And while it had it's challenges, I felt so...focused, awesome, powerful, like I was finally on the path to being a developer.&lt;/p&gt;
&lt;p&gt;Then I decided to veer off the path of a custom CMS, and towards my heart's mission: the bi-weekly budget that always I've wanted. Something that allows me to work in one app, and not the three I currently use to balance my money.&lt;/p&gt;
&lt;p&gt;But I've been floundering ever since I made that decision. I decided to try to learn a JavaScript framework as a gateway into the framework I really want to learn to build the app. Then I felt that I didn't have enough of a grasp of basic JavaScript to understand what the hell I was reading in those tutorials. So I decided I really just need to get back to my JavaScript basics. But, I zone out when I'm reading books, and I often get impatient with video courses. And while I love FreeCodeCamp, I find that I'm not retaining what I'm doing from lesson to lesson, even though I'm figuring it out as I go.&lt;/p&gt;
&lt;p&gt;Then I found an &lt;a href="https://www.freecodecamp.org/news/the-guaranteed-fastest-way-to-break-into-web-development/"&gt;article&lt;/a&gt; about the quickest way to become a Web Developer. The author's answer? Build projects. That's all.&lt;/p&gt;
&lt;p&gt;And that really resonated with me. When I was working on this site, I learned so much and felt so motivated to figure things out, even when I got pissed that something didn't work, or upset when a presentation didn't work. I had a project to work on, and it drove my learning.&lt;/p&gt;
&lt;p&gt;So I recognize I learn best when working on a project, and not just a series of code exercises, and I have a project in mind.&lt;/p&gt;
&lt;h2&gt;WHAT THE HELL IS THE PROBLEM THEN?&lt;/h2&gt;
&lt;p&gt;I shared my educational resistance with my husband (who is the best sport when it comes to my code nerd ramblings!). I talked to him about my successes with my site, and how I wanted to replicate that with my app, but it felt too big. I didn't know where to start and it was paralyzing me.&lt;/p&gt;
&lt;p&gt;He looks at me and says "Well, do you know specifically what you want your app to do?"&lt;/p&gt;
&lt;p&gt;&lt;img style="max-height:40rem;" class="img-fluid d-block mx-auto mb-3" src="https://shebuildswithcode.com/images/spiderman-face-palm.png" alt="Spiderman FacePalm"&gt;&lt;/p&gt;
&lt;p&gt;I realized, maybe for the first time ever, that I had no idea what specifically I wanted my app to do. And what I really mean is I didn't sit down and figure out my MVP for the app. All I could see was this massive final project that seemed completely beyond my skill set.&lt;/p&gt;
&lt;p&gt;I got this site up because I had a specific starting place (fully static site), and a specific next stop on the roadmap (site using a static site generator.). My app is still very much just an idea - a vague concept of what I'd like without any plan points.&lt;/p&gt;
&lt;p&gt;I also realized this - working on learning to code doesn't always mean writing code. I've read time and time again that most professional developers spend more time on non-code tasks. I think I felt that not actively writing code meant I wasn't learning. But I can't get somewhere if I have no idea where the hell I want to end up! I've got to work out a plan, just the way I did for my site.&lt;/p&gt;</content></entry></feed>