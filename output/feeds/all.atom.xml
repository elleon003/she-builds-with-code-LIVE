<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>She Builds With Code</title><link href="https://shebuildswithcode.com/" rel="alternate"></link><link href="https://shebuildswithcode.com/feeds/all.atom.xml" rel="self"></link><id>https://shebuildswithcode.com/</id><updated>2019-07-12T00:00:00-04:00</updated><entry><title>I Am In Over My Head!</title><link href="https://shebuildswithcode.com/blog/i-am-in-over-my-head.html" rel="alternate"></link><published>2019-07-12T00:00:00-04:00</published><updated>2019-07-12T00:00:00-04:00</updated><author><name>Noelle</name></author><id>tag:shebuildswithcode.com,2019-07-12:/blog/i-am-in-over-my-head.html</id><summary type="html">&lt;p&gt;Diving into using a static site generator after using manual static has it's challenges!&lt;/p&gt;</summary><content type="html">&lt;p&gt;I had a bit of an indecisive moment before launching into the next phase of my site. As I had mentioned, I was set on building version 2 of the site with &lt;a href="https://blog.getpelican.com/"&gt;Pelican Static Site Generator&lt;/a&gt; for a number of reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It is written in Python, my primary language of choice&lt;/li&gt;
&lt;li&gt;While there are other static site generators written in Python, none had the development or community around it the way Pelican did.&lt;/li&gt;
&lt;li&gt;It uses &lt;a href="http://jinja.pocoo.org/"&gt;Jinja&lt;/a&gt; templates to render the pages, which is also used by Flask&lt;/li&gt;
&lt;li&gt;I plan to use Flask to build a custom blog in the final version of the site, so Pelican seemed like a good mid step.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However, I can't ever stop searching for the "right" answer, so I kept digging a little more around the internet for peoples opinions. In a Twitter feed, I think, someone mentioned &lt;a href="https://www.getlektor.com/"&gt;Lektor.&lt;/a&gt; It's another static site generator built in Python. It was mentioned because it offered an admin panel, similar to a WordPress blog, something that other site generators didn't do.&lt;/p&gt;
&lt;p&gt;My initial thought was "Oh, cool! That will give me the ability to post from my phone!"&lt;/p&gt;
&lt;p&gt;&lt;img style="max-height:40rem;" class="img-fluid d-block mx-auto mb-3" src="https://shebuildswithcode.com/images/facepalm-cat.png" alt="Facepalm Cat Meme"&gt;&lt;/p&gt;
&lt;p&gt;The admin panel is a locally housed admin panel...cause this is a static site generator that doesn't have a database. The code generates the static pages, then those pages get uploaded.&lt;/p&gt;
&lt;p&gt;Anyway, on closer inspection, I found that Pelican still had the widest use and more features available. So I went back to the original plan.&lt;/p&gt;
&lt;p&gt;I followed the quickstart installation instructions, and they were pretty easy to follow. I set up a second folder in my &lt;a href="https://github.com/elleon003/she-builds-with-code"&gt;GitHub&lt;/a&gt; repo for the project files, and started to dive in.&lt;/p&gt;
&lt;p&gt;I started reading through the documentation, but found myself following too many rabbit holes. So then I decided I'd start working on a specific goal, like converting my blog posts to Markdown. But I kept getting caught up in how to bring over the styling, which lead me to decide to start building my custom theme instead.&lt;/p&gt;
&lt;p&gt;A note - this is the first time I've ever tried to build something on my own, just using the documentation without any tutorial. And after trying to understand what I was reading for about 5 minutes made me realize that I was in waaaaay over my head.0&lt;/p&gt;
&lt;p&gt;For a second, I really panicked. &lt;em&gt;"Maybe this was a dumb idea. Maybe I'm not good enough yet to try this. Maybe I should take this down and do something else for a bit, gain more experience."&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;But then I realized, there's really nothing to lose here. Sure, I don't fully understand what I'm doing yet, but that's the beauty of learning!&lt;/p&gt;
&lt;p&gt;This project is mine - it's not for anyone else, no one is expecting this for a grade or as a client. The worst thing that would happen is I break my site and have to fix it. If I want to do this, that kind of thing would happen. Isn't it better that I learn it in a low-stakes situation first?&lt;/p&gt;
&lt;p&gt;So I'm working through it, slowly. And if I don't understand something, I'm going to try what I think and see what happens. And if I'm right or wrong, I'll learn from it. Honestly, I'll retain better if I struggle through something vs. finding the answer in Google. I needed to remind myself that's the whole purpose of this.&lt;/p&gt;</content></entry><entry><title>What in the holy CSS?!</title><link href="https://shebuildswithcode.com/blog/what-the-holy-css.html" rel="alternate"></link><published>2019-07-06T00:00:00-04:00</published><updated>2019-07-06T00:00:00-04:00</updated><author><name>Noelle</name></author><id>tag:shebuildswithcode.com,2019-07-06:/blog/what-the-holy-css.html</id><summary type="html">&lt;p&gt;I think my site has a mobile ghost...&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ok, this wasn't supposed to be my focus today, so this is going to be short, but I had to share the newest frustration with my site&lt;/p&gt;
&lt;p&gt;So as I had done previously, I got my site up, wrote about my struggles, posted that, then tested the site on my phone.&lt;/p&gt;
&lt;p&gt;Imagine my dismay when this is what I saw.....&lt;/p&gt;
&lt;p&gt;&lt;img style="max-height:40rem;" class="img-fluid d-block mx-auto mb-3" src="https://shebuildswithcode.com/images/floating-footer.jpg" alt="My site with the footer in the middle"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WHAT THE HOLY HELL???&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, I wasn't able to duplicate this on my desktop at all, and it was doing this on all my pages, on all of the mobile browsers I used. Too fried from the day, I decided to make it my priority today.&lt;/p&gt;
&lt;p&gt;Jumping in today, before I did anything, I gave my site a refresh....and the damn thing was fine! No floating footers, no spacing issues, nothing.&lt;/p&gt;
&lt;p&gt;So yeah.....I really don't know what to say about it. While the explorer part of me wants to dive deep into the how of all of it, the rest of me wants to be done with manually updating my static site. That side is a little louder, so I'm filing this under "check this out later" and looking to start working on Pelican today.&lt;/p&gt;
&lt;p&gt;Really hoping to not run into any more web ghosts today...&lt;/p&gt;</content></entry><entry><title>Damnit, just stick footer!</title><link href="https://shebuildswithcode.com/blog/damnit-just-stick-footer.html" rel="alternate"></link><published>2019-07-05T00:00:00-04:00</published><updated>2019-07-05T00:00:00-04:00</updated><author><name>Noelle</name></author><id>tag:shebuildswithcode.com,2019-07-05:/blog/damnit-just-stick-footer.html</id><summary type="html">&lt;p&gt;Determined to get a grip on a sticky footer.&lt;/p&gt;</summary><content type="html">&lt;p&gt;After uploading the site yesterday, I made sure to click around the site live. For one, I was really proud that I got it up and wanted to bask in it a little bit. And secondly, I wanted to check all my links. Sure enough, I had one link that was incomplete, an internal link that had a typo, and a outgoing link that didn’t open in a new tab.
Once that was all fixed, I took a look at it on my phone. And………… &lt;/p&gt;
&lt;p&gt;&lt;img style="max-height:40rem;" class="img-fluid d-block mx-auto mb-3" src="https://shebuildswithcode.com/images/non-sticky-footer.jpg"alt="Screenshot of floating footer on mobile"&gt;&lt;/p&gt;
&lt;p&gt;DAMMIT!!&lt;/p&gt;
&lt;p&gt;In previous projects, I have struggled with getting my footer to stick to the bottom of the window. But each time I’ve fixed it, I’ve just copied and pasted code I’ve found. I honestly didn’t understand how it worked. This time, I was determined to make it make sense. Here are the key parts of my HTML:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;h-100&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
........
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;d-flex flex-column h-100&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;navbar navbar-expand-lg navbar-light bg-primary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Nav stuff here
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flex-shrink-0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;footer&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;footer mt-auto py-2 bg-dark&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Footer content
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;footer&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Full disclosure - I took this code directly from the Sticky Footer example provided by Bootstrap. But after I applied it, I played around in the Developer tools on Firefox turning styles off and on. I also missed applying a class to an item, and once I discovered that mistake, I felt I had a tiny better grip on how it all worked.&lt;/p&gt;
&lt;p&gt;These classes applied to the body: &lt;code&gt;&amp;lt;body class="d-flex flex-column h-100"&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;d-flex applies flexbox display on the body element.&lt;/li&gt;
&lt;li&gt;flex-column changes the direction of all child elements to stack vertically, instead of the default row view of flexbox. &lt;/li&gt;
&lt;li&gt;and h-100 makes the body's height take up 100% of the available space, set by the parent element&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As the parent element, this: &lt;code&gt;&amp;lt;html class="h-100" lang="en-US"&amp;gt;&lt;/code&gt; was also applied to make sure that the page was displaying on 100% of the available view.&lt;/p&gt;
&lt;p&gt;This: &lt;code&gt;&amp;lt;main class="flex-shrink-0"&amp;gt;&lt;/code&gt; ...I'll be dead honest - I'm not completely clear on this. I know that by default, flex will grow and shrink elements in a container evenly by default. Telling it to shrink by 0 means the main content will not shrink in height (height instead of width because the parent container is displaying everything in columns.) And as the part of code I initially forgot, I know it's key to pushing the footer to the bottom of the screen.&lt;/p&gt;
&lt;p&gt;So yeah....I've got a better grip, but not good enough to fully explain it. CSS is going to be a challenge for me in this project.&lt;/p&gt;
&lt;p&gt;To wrap this post up, I’ve decided to start the &lt;a href="https://www.100daysofcode.com/"&gt;#100DaysofCode&lt;/a&gt; challenge using this site. I’ve tried before, but quit early because I had no clear direction for how I spent my time coding, no end project in mind. This time, I’ve got clear mile-markers for this site, with a ton of stuff to learn along the way. Follow me on Twitter &lt;a href="https://twitter.com/SheBuildsWCode"&gt;@SheBuildsWCode&lt;/a&gt; or sign up for email updates below!&lt;/p&gt;</content></entry><entry><title>The MVP of this site (Minimum Viable Product)</title><link href="https://shebuildswithcode.com/blog/the-mvp-of-this-site.html" rel="alternate"></link><published>2019-07-02T00:00:00-04:00</published><updated>2019-07-02T00:00:00-04:00</updated><author><name>Noelle</name></author><id>tag:shebuildswithcode.com,2019-07-02:/blog/the-mvp-of-this-site.html</id><summary type="html">&lt;p&gt;Where it all starts&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you haven't yet, I recommend reading the &lt;a href="https://shebuildswithcode.com/about.html"&gt;About&lt;/a&gt; page of this site, just so you know what you're getting into!&lt;/p&gt;
&lt;p&gt;For day one of my “build as you learn” site, I’m going with the most minimum site I can build – a few HTML pages, styled with a little CSS (mainly Bootstrap).&lt;/p&gt;
&lt;p&gt;For the most part, I’m going to build everything, but I’m going to use some frameworks as I go. But since I need to learn those frameworks, and the goal here is to make constant progress now that I’ve started, I’m starting very small.&lt;/p&gt;
&lt;p&gt;That said, I am not a designer. I have no desire to be a designer. My goals in code are geared more toward Backend development, so I’m using Bootstrap for styles instead of trying to build all my CSS from the ground up.&lt;/p&gt;
&lt;p&gt;Initially, this will be a static site – I’ll be manually updating all new posts on the home page. Obviously this is going to get old VERY quickly, so the next version of this site (and the subject of the next series of my posts) will be dedicated to learning a Python based site generator named &lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; to eliminate this pain in the ass.&lt;/p&gt;
&lt;p&gt;That said, I'm extremely excited to have gotten this far. Building the home page, this post, the about page, and the contact page has taken me all day (at least around 8 hours), but I'm thrilled to see my work.&lt;/p&gt;
&lt;p&gt;So all that I accomplished on this first day:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Purchased and setup the domain &lt;a href="https://shebuildswithcode.com"&gt;&lt;em&gt;She Builds With Code.com&lt;/em&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Downloaded my personal html boilerplate code from my &lt;a href="https://github.com/elleon003/my-html-boilerplate"&gt;GitHub repo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Wrote my about page and this post&lt;/li&gt;
&lt;li&gt;It was really important to me to write before I got too tired, so it came before I dove into code.&lt;/li&gt;
&lt;li&gt;Created and integrated my signup forms for MailChimp&lt;/li&gt;
&lt;li&gt;Don't forget to &lt;a href="#mc_embed_signup"&gt;sign up&lt;/a&gt; for updates!&lt;/li&gt;
&lt;li&gt;Created my &lt;a href="https://shebuildswithcode.com/contact-me.html"&gt;Contact&lt;/a&gt; page, using a service called &lt;a href="https://formspree.io/"&gt;Formspree&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Installed &lt;a href="https://matomo.org/"&gt;Matomo&lt;/a&gt; Web Analytics (open source web analytics)&lt;/li&gt;
&lt;li&gt;Uploaded the site to a &lt;a href="https://github.com/elleon003/she-builds-with-code/"&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Used cPanel's Git integration to upload my site to my &lt;a href="http://www.a2hosting.com?aid=5b02ff493a6f4"&gt;A2 Hosting&lt;/a&gt; account.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not a ton of coding today, not surprising considering the setup needed to get started.The cool thing is after typing my own HTML today, I have finally remembered what the HTML snippet is to open a link in a new tab. It's &lt;code&gt;target="_blank"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img style="max-height:40rem;" class="img-fluid d-block mx-auto mb-3" src="https://shebuildswithcode.com/images/snoopy-dance-woohoo-meme.jpg"alt="Snoopy Dance"&gt;&lt;/p&gt;
&lt;p&gt;In addition to learning Pelican, I'll also be looking at adding comment functionality. Initially, I thought about using a 3rd party program like Disqus, but this site is going to go through so many changes as I learn. I didn't like the idea of not owning the content on my site - I'd run the risk of losing all of it if I decided to switch after things had gotten started!&lt;/p&gt;
&lt;p&gt;Thanks for sticking around. I'm excited to see where we go from here.&lt;/p&gt;</content></entry></feed>